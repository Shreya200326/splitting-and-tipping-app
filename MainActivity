package com.example.app1

import android.R.attr.button
import android.animation.ArgbEvaluator
import android.content.ContentValues.TAG
import android.content.Intent
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.SeekBar
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat
private const val INITIAL_TIP_PERCENT=15
class MainActivity : AppCompatActivity() {
    private lateinit var tvBaseAmount : EditText
    private lateinit var seekBar1: SeekBar
    private lateinit var tippercent : TextView
    private lateinit var tvtipAmount : TextView
    private lateinit var tvTotalamount : TextView
    private lateinit var tvTipDescription : TextView
    private lateinit var switch_activity: Button
    override fun onCreate(savedInstanceState: Bundle?) {

        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        tvBaseAmount= findViewById(R.id.tvBaseAmount)
        seekBar1= findViewById(R.id.seekBar1)
        tippercent= findViewById(R.id.tippercent)
        tvtipAmount= findViewById(R.id.tvtipAmount)
        tvTotalamount= findViewById(R.id.tvTotalamount)
        tvTipDescription= findViewById(R.id.tvTipDescription)
        switch_activity=findViewById(R.id.switch_activity)
        seekBar1.progress= INITIAL_TIP_PERCENT
        tippercent.text="$INITIAL_TIP_PERCENT%"
        updateTipDescription(INITIAL_TIP_PERCENT)
        val switchActivity1 = findViewById<Button>(R.id.switch_activity)
        switchActivity1.setOnClickListener {
            val Intent = Intent(this, MainActivity2::class.java)
            startActivity(Intent)
        }

        seekBar1.setOnSeekBarChangeListener(object: SeekBar.OnSeekBarChangeListener{

            override fun onProgressChanged(p0: SeekBar?, progress:Int, fromUser:Boolean) {
            Log.i(TAG,"OnProgressChanged $progress")
                tippercent.text= "$progress%"
                computeTipAndTotal()
                updateTipDescription(progress)
            }

            override fun onStartTrackingTouch(p0: SeekBar?) {}

            override fun onStopTrackingTouch(p0: SeekBar?) {}
        } )
        tvBaseAmount.addTextChangedListener(object: TextWatcher {
            override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {}

            override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {
            }

            override fun afterTextChanged(s: Editable?) {
                Log.i(TAG,"afteTextChanged $s")
                computeTipAndTotal()
            }

        })
    }


    private fun updateTipDescription(tipPercent:Int) {
        val tipDescription = when (tipPercent) {
            in 0..9 -> "Poor\uD83D\uDE14"
            in 10..14 -> "Acceptable\uD83D\uDE07"
            in 15..20 -> "Good\uD83D\uDE01"
            in 21..25 -> "Great!\uD83D\uDE00"
            else-> "Amazing!!\uD83E\uDD29"
        }
        tvTipDescription.text= tipDescription
        val color=ArgbEvaluator().evaluate(
            tipPercent.toFloat()/ seekBar1.max,

            ContextCompat.getColor(this,R.color.color_worst_tip),
            ContextCompat.getColor(this,R.color.color_best_tip),

        ) as Int
        tvTipDescription.setTextColor(color)
    }

    private fun computeTipAndTotal()
    {
        if(tvBaseAmount.text.isEmpty()){
            tvtipAmount.text=""
            tvTotalamount.text=""
            return
        }
        val baseAmount = tvBaseAmount.text.toString().toDouble()
        val tippercent = seekBar1.progress
        val tipAmount= baseAmount * tippercent/100
        val totalAmount= baseAmount+ tipAmount
        tvtipAmount.text="%.2f".format(tipAmount)
        tvTotalamount.text="%.2f".format(totalAmount)

        }
    }



